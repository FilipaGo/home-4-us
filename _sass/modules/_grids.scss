/**/
/*-- Fluid Grid - desenvolvida com base no materialize, mas alterada - http://materializecss.com/getting-started.html*/
/**/

section {
  padding-top: (50/16) * 1rem;
  padding-bottom: (50/16) * 1rem;

  @media #{$large-and-up} {
      padding-top: (70/16) * 1rem;
      padding-bottom: (70/16) * 1rem;
  }

  &.no-pad {
    padding: 0;
  }
  &.no-pad-bot {
    padding-bottom: 0;
  }
  &.no-pad-top {
    padding-top: 0;
  }
}

.container {
  margin: 0 auto;
  max-width: $site-max-width;

  &.pad-top-bot {
    padding-top: (50/16) * 1rem;
    padding-bottom: (50/16) * 1rem;

    @media #{$large-and-up} {
        padding-top: (70/16) * 1rem;
        padding-bottom: (70/16) * 1rem;
    }
  }

  &.pad-bot {
    padding-bottom: (50/16) * 1rem;

    @media #{$large-and-up} {
        padding-bottom: (70/16) * 1rem;
    }
  }
}

/* Mixins */
@mixin reset-offset {
  margin-left: auto;
  left: auto;
  right: auto;
}

.row {
  margin-left: auto;
  margin-right: auto;
  padding: 0 $gutter-width / 2;

  @media #{$large-and-up} {
    padding: 0 $gutter-width;
  }

  &:after {
    content: "";
    display: table;
    clear: both;
  }

  &.row-big-pad-top {
    @include padding-top-to-rem (50);

    @media #{$large-and-up} {
        @include padding-top-to-rem (70);
    }
  }

  &.row-no-pad-right {
      padding-right: 0;
  }

  &.row-no-pad-left {
      padding-left: 0;
  }

  &.row-no-pad-right-mobile {
      padding-right: 0;

      @media #{$large-and-up} {
      padding-right: $gutter-width;
      }
  }

  &.row-no-pad-left-mobile {
      padding-left: 0;

      @media #{$large-and-up} {
      padding-left: $gutter-width;
      }
  }

  &.row-pad-top-bot {
    padding-bottom: $gutter-width;
    padding-top: $gutter-width;

    @media #{$large-and-up} {
      padding-bottom: $gutter-width *2;
      padding-top: $gutter-width *2;
    }
  }

  &.row-pad-bot {
    padding-bottom: $gutter-width;

    @media #{$large-and-up} {
      padding-bottom: $gutter-width *2;
    }
  }

  &.row-pad-top {
    padding-top: $gutter-width;

    @media #{$large-and-up} {
      padding-top: $gutter-width *2;
    }
  }

  .col {
    float: left;
    box-sizing: border-box;
    padding: 0 $gutter-width / 2;
    min-height: 1px;

    @media #{$large-and-up} {
      padding: 0 $gutter-width;
    }

    &.col-pad-top-bot {
      padding-bottom: $gutter-width;
      padding-top: $gutter-width;

      @media #{$large-and-up} {
        padding-bottom: $gutter-width *2;
        padding-top: $gutter-width *2;
      }
    }

    &.col-pad-top-bot-regular {
      padding-bottom: $gutter-width / 2;
      padding-top: $gutter-width / 2;

      @media #{$large-and-up} {
        padding-bottom: $gutter-width;
        padding-top: $gutter-width;
      }
    }

    &[class*="push-"],
    &[class*="pull-"] {
      position: relative;
    }

    @for $i from 1 through $num-cols {
          $perc: (100% / $num-cols) * $i;
            &.s#{$i} {
               width: $perc;
               @include reset-offset;
            }
         }

    @media #{$medium-and-up} {
      @for $i from 1 through $num-cols {
            $perc: (100% / $num-cols) * $i;
              &.m#{$i} {
                 width: $perc;
                 @include reset-offset;
              }
           }
           }

    @media #{$large-and-up} {
      @for $i from 1 through $num-cols {
            $perc: (100% / $num-cols) * $i;
              &.l#{$i} {
                 width: $perc;
                 @include reset-offset;
              }
           }
           }

    @media #{$extra-large-and-up} {
      @for $i from 1 through $num-cols {
            $perc: (100% / $num-cols) * $i;
              &.xl#{$i} {
                 width: $perc;
                 @include reset-offset;
              }
           }
           }

    @media #{$extra-extra-large-and-up} {
      @for $i from 1 through $num-cols {
            $perc: (100% / $num-cols) * $i;
              &.xxl#{$i} {
                 width: $perc;
                 @include reset-offset;
              }
           }
           }
  }
}
